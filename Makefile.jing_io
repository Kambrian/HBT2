##### fortran compiler specification if you need to use jing_io for Yipeng's simulations ####
##### set USE_JING_IO=yes to enable 

# USE_JING_IO=yes

ifeq ($(USE_JING_IO), yes)
FC=gfortran
FFLAGS+=$(OMPFFLAG)
CXXFLAGS+=-DUSE_JING_IO
else
FC=
endif

ifeq ($(FC), gfortran)
OMPFFLAG=-fopenmp
OMPLIB=-fopenmp
FTNLIB=-lgfortran
endif
ifeq ($(FC), ifort)
OMPFFLAG=-qopenmp
OMPLIB=-liomp5 #newest intel omp is compatible with gcc, but not vice versa
FTNLIB=-lifport -lifcore
endif

#### override default configurations on a few peculiar servers##
HOSTLIST:=UV00000292-P000 a4700
ifneq ($(filter $(HOST),$(HOSTLIST)),)
USE_JING_IO=yes
CXX=g++
FC=ifort
OMPCFLAG=-fopenmp
MATHLIB=-lm
OMPFFLAG=-qopenmp
OMPLIB=-liomp5
FTNLIB=-lifport -lifcore
endif

ifeq ($(HOST), a4700)
OMPFFLAG=
OMPLIB=-fopenmp
$(OBJS_Jing): OMPCFLAG=
endif

%.f.o: %.f90
	$(FC) $^ $(FFLAGS) -c -o $@ 

ifeq ($(USE_JING_IO),yes)
SRC_Jing=$(wildcard $(HBTDIR)/src/io/jing/*.cpp) $(wildcard $(HBTDIR)/src/io/jing/*.f90)
endif
OBJS_Jing=$(patsubst %.f90,%.f.o, $(SRC_Jing:%.cpp=%.o))